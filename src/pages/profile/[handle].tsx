import BottomNavBar from "@/components/BottomNavBar";
import ConnectWithCyberConnect from "@/components/ConnectWithCyberConnect";
import Header from "@/components/Header";
import Post from "@/components/Post";
import ProfilePost from "@/components/ProfilePost";
import Sidebar from "@/components/Sidebar";
import { ACCOUNTS } from "@/graphql/Accounts";
import { GET_ESSENECE } from "@/graphql/GetEssences";
import { PROFILE_BY_HANDLE } from "@/graphql/ProfileByHandle";
import useGetUserCCProfile from "@/hooks/auth/useGetUserCCProfile";
import useSubscribeProfile from "@/hooks/useSubscribe";
import { useQuery } from "@apollo/client";
import Head from "next/head";
import { useRouter } from "next/router";
import React, { useState } from "react";

type Props = {};

const Profile = (props: Props) => {
  const router = useRouter();
  const [open, setOpen] = useState<boolean>(false);
  const [followed, setFollowed] = useState<boolean>(false);
  const { handle } = router.query;
  const { getUserCCProfile, handle: profileHandle } = useGetUserCCProfile();
  const {subscribeProfile} = useSubscribeProfile();
  const {data: profileData} = useQuery(PROFILE_BY_HANDLE,{
    variables:{
      handle: handle as string
    }
  });

  const { data } = useQuery(GET_ESSENECE, {
    variables: {
      appID: "example_app_Id",
      handle: handle as string,
    },
  });

  React.useEffect(() => {
    getUserCCProfile();
  }, [profileHandle])

  if (!handle) {
    return <div>No handle provided</div>;
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={""}>
        <Header />
        <div className="flex">
          <Sidebar />

          <div className="w-full flex min-h-full  px-0 md:px-20 flex-1 md:w-400px">
            <div className=" w-full   px-2 md:px-0 pb-12">
              <div className="py-4 md:flex items-center justify-end hidden ">
                <ConnectWithCyberConnect setOpen={setOpen} />
              </div>
              {/* posts will come here */}
              <div className="flex items-center justify-between max-w-[500px] mb-8 py-4">
                <h1 className="text-xl md:text-2xl font-semibold  ">
                  {handle}
                </h1>
                <div>
                  {profileHandle != handle &&
                    <button className="px-4 py-2 bg-black text-sm text-white rounded-md" 
                      onClick={async()=>{
                        await subscribeProfile(profileData?.profileByHandle?.profileID!)
                        setFollowed(true);
                      }}
                    >
                      {followed ? "Following" : "Follow"}
                    </button>
                  }
                </div>
              </div>

              <div>
                {!data ? <div className="w-full h-[200px] max-w-[500px] flex items-center justify-center ">
                  <div className="w-8 h-8 border-4 border-b-transparent rounded-full animate-spin"></div>
                </div>
                  : data?.profileByHandle?.essences.edges && data?.profileByHandle?.essences.edges.length > 0 ? (
                    data?.profileByHandle?.essences.edges.map((e, k) => {
                      return (
                        <ProfilePost key={k} data={{essence:{
                          name: e?.node?.name,
                          tokenURI: e?.node?.tokenURI
                        }}} handle={handle as string} />
                      );
                    })
                  ) : (
                    <div className="w-full  max-w-[500px] flex items-center justify-center ">
                      <div className="px-4 py-2 rounded-md shadow-md ">Nothing to show here</div>
                    </div>
                  )}
              </div>
            </div>
          </div>
        </div>
        <BottomNavBar />
      </main>
    </>
  );
};

export default Profile;
